import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as n}from"./app-DOkRBtKU.js";const l={};function h(t,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="alpine-linux-环境中安装-docker" tabindex="-1"><a class="header-anchor" href="#alpine-linux-环境中安装-docker"><span><strong>alpine linux 环境中安装 docker</strong></span></a></h1><ul><li>alpine linux 是一个基于安全的轻量级 Linux 发行版，基于 musl libc 和 busybox。alpine linux 由于简单安全，非常适合 docker 的 linux 发行版，并且被 docker 官方所推荐用来取代 ubuntu。它不但非常小，仅有 5m 左右，而且经过优化可以在 RAM 中运行</li><li>既然这么省资源，那么本文就尝试在虚拟机中安装 alpine，然后安装 docker</li><li><a href="https://wiki.alpinelinux.org/wiki/Main_Page" target="_blank" rel="noopener noreferrer">官方文档</a></li></ul><h2 id="下载" tabindex="-1"><a class="header-anchor" href="#下载"><span>下载</span></a></h2><ul><li>alpinelinux<code>https://www.alpinelinux.org/downloads/</code>，这里选择<code>VIRTUAL</code>，它与标准版相似、瘦下来的内核、针对虚拟系统进行了优化。</li><li><a href="http://dl-cdn.alpinelinux.org/alpine/v3.9/releases/x86_64/alpine-virt-3.9.4-x86_64.iso" target="_blank" rel="noopener noreferrer">下载地址链接</a></li><li>下载得到的文件是<code>alpine-virt-3.9.4-x86_64.iso</code>，大小 35m</li></ul><h2 id="vmware-中安装" tabindex="-1"><a class="header-anchor" href="#vmware-中安装"><span>VMware 中安装</span></a></h2><ul><li>按道理 VirtualBox 也是一样的，VMware 的新建虚拟机的设置中，操作系统类型选择<code>Linux</code>，版本选择<code>其他Linux 4.x 或更高版本内核 64 位</code></li><li>其他步骤按照提示来就行了，问题不大。新建完后启动虚拟机</li></ul><h2 id="设置-alpine" tabindex="-1"><a class="header-anchor" href="#设置-alpine"><span>设置 alpine</span></a></h2><ul><li>启动之后进入安装步骤</li><li>具体步骤参考 <a href="https://wiki.alpinelinux.org/wiki/Install_to_disk" target="_blank" rel="noopener noreferrer">https://wiki.alpinelinux.org/wiki/Install_to_disk</a></li><li>可参考博客：<a href="https://blog.csdn.net/csdn_duomaomao/article/details/76053229" target="_blank" rel="noopener noreferrer">Alpine linux 硬盘安装</a>、<a href="https://blog.csdn.net/ochinchina_cn/article/details/58593271" target="_blank" rel="noopener noreferrer">alpine linux docker 安装体验</a></li></ul><h2 id="apk-介绍" tabindex="-1"><a class="header-anchor" href="#apk-介绍"><span>apk 介绍</span></a></h2><ul><li>Alpine Linux 的软件包是经过数字签名的 tar.gz 存档，包含程序，配置文件和依赖关系元数据。它们具有扩展名.apk，通常称为“a-packs”。包存储在一个或多个存储库中。</li><li>相关文档，包含常用命令及介绍。<a href="https://wiki.alpinelinux.org/wiki/Alpine_Linux_package_management" target="_blank" rel="noopener noreferrer">https://wiki.alpinelinux.org/wiki/Alpine_Linux_package_management</a></li><li><a href="https://pkgs.alpinelinux.org/packages" target="_blank" rel="noopener noreferrer">包搜索地址</a></li><li>有些包可能在社区的源才有，地址：<a href="http://dl-cdn.alpinelinux.org/alpine/latest-stable/community" target="_blank" rel="noopener noreferrer">http://dl-cdn.alpinelinux.org/alpine/latest-stable/community</a></li></ul><h2 id="安装-docker" tabindex="-1"><a class="header-anchor" href="#安装-docker"><span>安装 docker</span></a></h2><ul><li>Docker 包位于“社区”存储库中，因此如果 apk 添加失败且具有不可满足的约束，则需要编辑<code>/etc/apk/repositories</code>文件以添加（或取消注释）一行，如：<a href="http://dl-cdn.alpinelinux.org/alpine/latest-stable/community" target="_blank" rel="noopener noreferrer">http://dl-cdn.alpinelinux.org/alpine/latest-stable/community</a></li><li>更新索引存储库<code>apk update</code></li><li>开始安装<code>apk add docker</code></li><li>要在引导时启动 Docker 守护程序，请运行：<code>rc-update add docker boot</code></li><li>然后手动启动 Docker 守护程序，运行：<code>service docker start</code></li><li>参考<a href="https://wiki.alpinelinux.org/wiki/Docker" target="_blank" rel="noopener noreferrer">alpinelinux Docker</a></li></ul><h2 id="运行" tabindex="-1"><a class="header-anchor" href="#运行"><span>运行</span></a></h2><ul><li>启动<code>service docker start</code></li><li><code>docker run hello-word</code></li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">localhost:/etc/docker#</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello-world</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Unable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> image</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;hello-world:latest&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> locally</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">latest:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Pulling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> library/hello-world</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1b930d010525:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> complete</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Digest:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sha256:0e11c388b664df8a27a901dce21eb89f11d8292f7fca1b3e3c4321bf7897bffe</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Status:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Downloaded</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> newer</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> image</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello-world:latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Hello</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker!</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">This</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> message</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shows</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> that</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> your</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> installation</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> appears</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> be</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> working</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> correctly.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">To</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> generate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> this</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> message,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> took</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> following</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> steps:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 1.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> The</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> client</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> contacted</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daemon.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 2.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> The</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daemon</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pulled</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;hello-world&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> image</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Hub.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">amd64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 3.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> The</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daemon</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> created</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> container</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> that</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> image</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> which</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> runs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    executable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> that</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> produces</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> output</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> you</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> are</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> currently</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reading.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 4.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> The</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daemon</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> streamed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> that</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> output</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> client,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> which</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sent</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> it</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> your</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> terminal.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">To</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> try</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> something</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> more</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ambitious,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> you</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> can</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> an</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Ubuntu</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> container</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> with:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> $</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ubuntu</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Share</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> images,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> automate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> workflows,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> more</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> free</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ID:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> https://hub.docker.com/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">For</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> more</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> examples</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ideas,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> visit:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> https://docs.docker.com/get-started/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h2><ul><li>上面安装完 docker 之后，使用命令<code>docker -v</code>可查看版本，但是容器相关命令出错</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">localhost:~#</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Cannot</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> connect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daemon</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> at</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unix:///var/rundocker.sock.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daemon</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> running?</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>通过命令<code>service docker start</code>也启动 docker，\`/var/run/docker.sock 也确实存在。</li><li>折腾一番之后，查看日志<code>cat ./var/log/docker.log</code>，得到关键信息<code>Error starting daemon: Devices cgroup isn&#39;t mounted</code>。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./var/log/docker.log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>最后看了官方文档得以解决，<a href="https://wiki.alpinelinux.org/wiki/Docker" target="_blank" rel="noopener noreferrer">https://wiki.alpinelinux.org/wiki/Docker</a></li><li>关键点还是<code>cgroup filesystem</code>的问题，<code>cgroup</code>是什么请自行查询</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">localhost:/etc/docker#</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rc-update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> boot</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> added</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> runlevel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> boot</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">localhost:/etc/docker#</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Mounting</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cgroup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> filesystem</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Starting</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>所以整个问题的根源是<code>cgroup filesystem</code>没有挂载，在执行<code>rc-update add docker boot</code>后在启动就好了</li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><ul><li>多次总结，使用一款产品，第一件事就是找到文档，文档实在晦涩难懂的情况，那么可能有翻译版或者国内版，毕竟官方的才是最权威的</li><li>其次是每个人用起来遇到的环境可能不一样，遇到的问题也就不一样，但所有的解决思路中，查看日志这一条是我觉得始终应该第一考虑的，它很明白告诉你，出错了，出了什么错，可能还有出错的具体位置以及建议解决方案</li><li>end</li></ul>`,25)]))}const p=s(l,[["render",h],["__file","alpine linux 环境中安装 docker.html.vue"]]),d=JSON.parse('{"path":"/knowledge/%E5%AE%B9%E5%99%A8%E5%8C%96_%E7%BC%96%E6%8E%92/Docker/alpine%20linux%20%E7%8E%AF%E5%A2%83%E4%B8%AD%E5%AE%89%E8%A3%85%20docker.html","title":"alpine linux 环境中安装 docker","lang":"zh-CN","frontmatter":{"description":"alpine linux 环境中安装 docker alpine linux 是一个基于安全的轻量级 Linux 发行版，基于 musl libc 和 busybox。alpine linux 由于简单安全，非常适合 docker 的 linux 发行版，并且被 docker 官方所推荐用来取代 ubuntu。它不但非常小，仅有 5m 左右，而且经过优...","head":[["meta",{"property":"og:url","content":"https://jishuzhaix.cn/knowledge/%E5%AE%B9%E5%99%A8%E5%8C%96_%E7%BC%96%E6%8E%92/Docker/alpine%20linux%20%E7%8E%AF%E5%A2%83%E4%B8%AD%E5%AE%89%E8%A3%85%20docker.html"}],["meta",{"property":"og:site_name","content":"技数斋"}],["meta",{"property":"og:title","content":"alpine linux 环境中安装 docker"}],["meta",{"property":"og:description","content":"alpine linux 环境中安装 docker alpine linux 是一个基于安全的轻量级 Linux 发行版，基于 musl libc 和 busybox。alpine linux 由于简单安全，非常适合 docker 的 linux 发行版，并且被 docker 官方所推荐用来取代 ubuntu。它不但非常小，仅有 5m 左右，而且经过优..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-12T14:50:48.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-12T14:50:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"alpine linux 环境中安装 docker\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-12T14:50:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"贺墨于\\",\\"url\\":\\"https://jishuzhaix.cn\\"}]}"]]},"headers":[{"level":2,"title":"下载","slug":"下载","link":"#下载","children":[]},{"level":2,"title":"VMware 中安装","slug":"vmware-中安装","link":"#vmware-中安装","children":[]},{"level":2,"title":"设置 alpine","slug":"设置-alpine","link":"#设置-alpine","children":[]},{"level":2,"title":"apk 介绍","slug":"apk-介绍","link":"#apk-介绍","children":[]},{"level":2,"title":"安装 docker","slug":"安装-docker","link":"#安装-docker","children":[]},{"level":2,"title":"运行","slug":"运行","link":"#运行","children":[]},{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1741791048000,"updatedTime":1741791048000,"contributors":[{"name":"HeMOu","username":"HeMOu","email":"fangqichenchao@163.com","commits":1,"url":"https://github.com/HeMOu"}]},"readingTime":{"minutes":3.4,"words":1019},"filePathRelative":"knowledge/容器化&编排/Docker/alpine linux 环境中安装 docker.md","localizedDate":"2025年3月12日","excerpt":"\\n<ul>\\n<li>alpine linux 是一个基于安全的轻量级 Linux 发行版，基于 musl libc 和 busybox。alpine linux 由于简单安全，非常适合 docker 的 linux 发行版，并且被 docker 官方所推荐用来取代 ubuntu。它不但非常小，仅有 5m 左右，而且经过优化可以在 RAM 中运行</li>\\n<li>既然这么省资源，那么本文就尝试在虚拟机中安装 alpine，然后安装 docker</li>\\n<li><a href=\\"https://wiki.alpinelinux.org/wiki/Main_Page\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方文档</a></li>\\n</ul>","autoDesc":true}');export{p as comp,d as data};
