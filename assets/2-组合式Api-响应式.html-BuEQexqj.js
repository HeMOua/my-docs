import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as s,o as i}from"./app-C7f1BNZb.js";const t={};function l(r,e){return i(),a("div",null,e[0]||(e[0]=[s(`<h1 id="响应式" tabindex="-1"><a class="header-anchor" href="#响应式"><span>响应式</span></a></h1><h2 id="核心" tabindex="-1"><a class="header-anchor" href="#核心"><span>核心</span></a></h2><h3 id="ref" tabindex="-1"><a class="header-anchor" href="#ref"><span><code>ref()</code></span></a></h3><p>接受一个内部值，返回一个响应式的、可更改的 ref 对象，此对象只有一个指向其内部值的属性 <code>.value</code>。</p><ul><li><p><strong>类型</strong></p><p>ts</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>function ref&lt;T&gt;(value: T): Ref&lt;UnwrapRef&lt;T&gt;&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>interface Ref&lt;T&gt; {</span></span>
<span class="line"><span>  value: T</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>详细信息</strong></p><p>ref 对象是可更改的，也就是说你可以为 <code>.value</code> 赋予新的值。它也是响应式的，即所有对 <code>.value</code> 的操作都将被追踪，并且写操作会触发与之相关的副作用。</p></li></ul>`,5)]))}const c=n(t,[["render",l],["__file","2-组合式Api-响应式.html.vue"]]),d=JSON.parse('{"path":"/knowledge/%E5%89%8D%E7%AB%AF/Vue.js/Vue3%20Api/2-%E7%BB%84%E5%90%88%E5%BC%8FApi-%E5%93%8D%E5%BA%94%E5%BC%8F.html","title":"响应式","lang":"zh-CN","frontmatter":{"description":"响应式 核心 ref() 接受一个内部值，返回一个响应式的、可更改的 ref 对象，此对象只有一个指向其内部值的属性 .value。 类型 ts 详细信息 ref 对象是可更改的，也就是说你可以为 .value 赋予新的值。它也是响应式的，即所有对 .value 的操作都将被追踪，并且写操作会触发与之相关的副作用。","head":[["meta",{"property":"og:url","content":"https://jishuzhaix.cn/my-docs/knowledge/%E5%89%8D%E7%AB%AF/Vue.js/Vue3%20Api/2-%E7%BB%84%E5%90%88%E5%BC%8FApi-%E5%93%8D%E5%BA%94%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"技数斋"}],["meta",{"property":"og:title","content":"响应式"}],["meta",{"property":"og:description","content":"响应式 核心 ref() 接受一个内部值，返回一个响应式的、可更改的 ref 对象，此对象只有一个指向其内部值的属性 .value。 类型 ts 详细信息 ref 对象是可更改的，也就是说你可以为 .value 赋予新的值。它也是响应式的，即所有对 .value 的操作都将被追踪，并且写操作会触发与之相关的副作用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-17T14:21:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-17T14:21:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"响应式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-17T14:21:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"贺墨于\\",\\"url\\":\\"https://jishuzhaix.cn\\"}]}"]]},"headers":[{"level":2,"title":"核心","slug":"核心","link":"#核心","children":[{"level":3,"title":"ref()","slug":"ref","link":"#ref","children":[]}]}],"git":{"createdTime":1739802080000,"updatedTime":1739802080000,"contributors":[{"name":"HeMOu","username":"HeMOu","email":"fangqichenchao@163.com","commits":1,"url":"https://github.com/HeMOu"}]},"readingTime":{"minutes":0.41,"words":123},"filePathRelative":"knowledge/前端/Vue.js/Vue3 Api/2-组合式Api-响应式.md","localizedDate":"2025年2月17日","excerpt":"\\n<h2>核心</h2>\\n<h3><code>ref()</code></h3>\\n<p>接受一个内部值，返回一个响应式的、可更改的 ref 对象，此对象只有一个指向其内部值的属性 <code>.value</code>。</p>\\n<ul>\\n<li>\\n<p><strong>类型</strong></p>\\n<p>ts</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>function ref&lt;T&gt;(value: T): Ref&lt;UnwrapRef&lt;T&gt;&gt;</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>interface Ref&lt;T&gt; {</span></span>\\n<span class=\\"line\\"><span>  value: T</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>详细信息</strong></p>\\n<p>ref 对象是可更改的，也就是说你可以为 <code>.value</code> 赋予新的值。它也是响应式的，即所有对 <code>.value</code> 的操作都将被追踪，并且写操作会触发与之相关的副作用。</p>\\n</li>\\n</ul>","autoDesc":true}');export{c as comp,d as data};
