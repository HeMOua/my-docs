import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a,o as n}from"./app-C7f1BNZb.js";const l={};function t(h,i){return n(),e("div",null,i[0]||(i[0]=[a(`<h1 id="kubeadm搭建k8s集群" tabindex="-1"><a class="header-anchor" href="#kubeadm搭建k8s集群"><span>kubeadm搭建k8s集群</span></a></h1><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建"><span>环境搭建</span></a></h2><ul><li>3台服务器，建议每台服务器设置主机名 xxx-nodex <ul><li>操作系统：CentOS 7</li><li>Docker：20+</li><li>k8s：1.23.6</li></ul></li><li>最低配置：2核、2G内存、20G硬盘</li></ul><h2 id="安装步骤" tabindex="-1"><a class="header-anchor" href="#安装步骤"><span>安装步骤</span></a></h2><h3 id="初始操作" tabindex="-1"><a class="header-anchor" href="#初始操作"><span>初始操作</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 关闭防火墙</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> firewalld</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> disable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> firewalld</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Kubernetes依赖于网络连接来实现不同组件之间的通信。防火墙可能会阻止这些连接，因此在配置集群时，通常会先禁用防火墙。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 关闭selinux</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sed</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;s/enforcing/disabled/&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/selinux/config</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 永久</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setenforce</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 临时</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SELinux是一种安全机制，但它可能会干扰Kubernetes的操作。为了避免不必要的权限问题，通常会将其关闭。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 关闭swap</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">swapoff</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 临时</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sed</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ri</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;s/.*swap.*/#&amp;/&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/fstab</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 永久</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Kubernetes建议禁用Swap，因为Swap会影响性能，并且Kubernetes调度器期望系统中的所有可用内存都是物理内存。并且在 1.8 版本之后，不禁用无法启动 k8s</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 关闭完swap后，一定要重启一下虚拟机！！！</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 根据规划设置主机名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hostnamectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set-hostname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">hostnam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">e&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 在master添加hosts</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/hosts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">192.168.56.105 centos-node1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">192.168.56.104 centos-node2</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">192.168.56.106 centos-node3</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将桥接的IPv4流量传递到iptables的链</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/sysctl.d/k8s.conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">net.bridge.bridge-nf-call-ip6tables = 1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">net.bridge.bridge-nf-call-iptables = 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sysctl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --system</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 生效</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Kubernetes使用iptables来管理网络规则，这些配置确保了流量可以被正确地处理。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 时间同步</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ntpdate</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ntpdate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> time.windows.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>确保所有节点的时间同步，因为Kubernetes的许多操作（如证书、调度和日志）依赖于准确的时间。</p><h3 id="安装k8s-所有节点" tabindex="-1"><a class="header-anchor" href="#安装k8s-所有节点"><span>安装k8s（所有节点）</span></a></h3><p>1、添加 k8s 的阿里 yum 镜像源</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/yum.repos.d/kubernetes.repo</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[kubernetes]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">name=Kubernetes</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">enabled=1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">gpgcheck=0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">repo_gpgcheck=1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">exclude=kube* </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、安装 k8s</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kubelet-1.23.6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kubeadm-1.23.6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kubectl-1.23.6</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 或者</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yum</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kubelet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kubeadm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kubectl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --disableexcludes=kubernetes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kubelet</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、配置关闭 Docker 的 cgroups，修改 /etc/docker/daemon.json，加入以下内容</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;exec-opts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;native.cgroupdriver=systemd&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>5、重启 docker</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="部署-k8s-master" tabindex="-1"><a class="header-anchor" href="#部署-k8s-master"><span>部署 k8s Master</span></a></h3><h4 id="cri环境操作" tabindex="-1"><a class="header-anchor" href="#cri环境操作"><span>cri环境操作</span></a></h4><p>1、cri-dockerd 可以作为一个适配器，让 k8s 通过运行时接口来控制 docker</p><p>地址：<a href="https://github.com/Mirantis/cri-dockerd" target="_blank" rel="noopener noreferrer">Mirantis/cri-dockerd: dockerd as a compliant Container Runtime Interface for Kubernetes </a></p><p>2、解压到指定目录</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cri-dockerd-0.3.4.amd64.tgz</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cri-dockerd/cri-dockerd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/bin/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cri-dockerd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、自启动文件</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/systemd/system/cri-dockerd.service</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;&lt;-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Description=CRI Interface for Docker Application Container Engine</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Documentation=https://docs.mirantis.com</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">After=network-online.target firewalld.service docker.service</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Wants=network-online.target</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Type=notify</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ExecStart=/usr/local/bin/cri-dockerd --pod-infra-container-image=registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.9 --network-plugin=cni --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --cri-dockerd-root-directory=/var/lib/dockershim --docker-endpoint=unix:///var/run/docker.sock --</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cri-dockerd-root-directory=/var/lib/docker</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ExecReload=/bin/kill -s HUP </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$MAINPID</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">TimeoutSec=0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">RestartSec=2</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Restart=always</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">StartLimitBurst=3</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">StartLimitInterval=60s</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">LimitNOFILE=infinity</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">LimitNPROC=infinity</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">LimitCORE=infinity</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">TasksMax=infinity</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Delegate=yes</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">KillMode=process</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">WantedBy=multi-user.target</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/systemd/system/cri-dockerd.socket</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt;-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Description=CRI Docker Socket for the API</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">PartOf=cri-docker.service</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[Socket]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ListenStream=/var/run/cri-dockerd.sock</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">SocketMode=0660</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">SocketUser=root</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">SocketGroup=docker</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">WantedBy=sockets.target</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、启动服务</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --now</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cri-dockerd.service</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="k8s-初始化" tabindex="-1"><a class="header-anchor" href="#k8s-初始化"><span>k8s 初始化</span></a></h4><p>apiserver 地址要和 master ip 地址一致</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kubeadm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      --apiserver-advertise-address=192.168.56.105</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      --image-repository</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> registry.aliyuncs.com/google_containers</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      --kubernetes-version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.28.2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      --service-cidr=10.96.0.0/12</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      --pod-network-cidr=10.244.0.0/16</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      --cri-socket=unix:///var/run/cri-dockerd.sock</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试环境</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nodes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="部署-k8s-node" tabindex="-1"><a class="header-anchor" href="#部署-k8s-node"><span>部署 k8s Node</span></a></h3><p>以下命令需要分别在子节点执行</p><p>1、下方命令可以在 k8s master 控制台初始化成功后复制 join 命令</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kubeadm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> join</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 192.168.113.120:6443</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">	--token</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> w34ha2.66if2c8nwmeat9o7</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">	--discovery-token-ca-cert-hash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sha256:20e2227554f8883811c01edd850f0cf2f396589d32b57b9984de3353a7389477</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">	--cri-socket=unix:///var/run/cri-dockerd.sock</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、如果初始化的 token 不小心清空了，可以通过如下命令获取或者重新申请</p><ul><li><p>如果 token 已经过期，就重新申请</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kubeadm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> token</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>token 没有过期可以通过如下命令获取</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kubeadm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> token</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p>3、获取 <code>--discovery-token-ca-cert-hash</code> 值，得到值后需要在前面拼接上 sha256:</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> x509</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pubkey</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/kubernetes/pki/ca.crt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rsa</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pubin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -outform</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> der</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 2&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/dev/null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dgst</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sha256</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -hex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;s/^.* //&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>将得到的值加上一个前缀 <code>sha256:</code> 就是我们需要的值</p><h3 id="部署-cni-网络插件" tabindex="-1"><a class="header-anchor" href="#部署-cni-网络插件"><span>部署 CNI 网络插件</span></a></h3><p>0、查看节点关键组件状态</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pods</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kube-system</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>1、下载配置文件</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://docs.projectcalico.org/manifests/calico.yaml</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -O</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2、修改 calico.yaml 文件中的 CALICO_IPV4POOL_CIDR 配置，修改为与初始化的 cidr 相同</p><p>3、删除镜像 <a href="http://docker.io" target="_blank" rel="noopener noreferrer">docker.io</a>/ 前缀，避免下载过慢导致失败</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sed</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;s#docker.io/##g&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> calico.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="测试集群" tabindex="-1"><a class="header-anchor" href="#测试集群"><span>测试集群</span></a></h2><p>1、创建部署</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>kubectl create deployment nginx --image=nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2、暴露端口</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>kubectl expose deployment nginx --port=80 --type=NodePort</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>3、查看 pod 以及服务信息</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>kubectl get pod,svc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>4、根据查看到的端口信息访问 nginx，可以方法不管用 master 还是用 node 都可以访问到 nginx</p><h2 id="命令行工具" tabindex="-1"><a class="header-anchor" href="#命令行工具"><span>命令行工具</span></a></h2><h3 id="任意节点使用-kubectl" tabindex="-1"><a class="header-anchor" href="#任意节点使用-kubectl"><span>任意节点使用 kubectl</span></a></h3><p>搭建完集群后，在 master 服务器中，会出现文件 <code>~/.kube/config</code>，其中内部会记录 server 地址信息，但是其他从节点则没有这些内容，无法使用 kubectl 命令</p><p>解决方法：</p><ol><li><p>将 master 节点中 <code>/etc/kubernetes/admin.conf</code> 拷贝到需要运行的服务器的 <code>/etc/kubernetes</code> 目录中</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">scp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/kubernetes/admin.conf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root@k8s-node1:/etc/kubernetes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>在对应的服务器上配置环境变量</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;export KUBECONFIG=/etc/kubernetes/admin.conf&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">~/.bash_profile</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.bash_profile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>注意</strong>：必须确保当前用户对 <code>/etc/kubernetes/admin.conf</code> 拥有读权限，如若没有，需要修改权限</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> chmod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 666</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/kubernetes/admin.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,73)]))}const r=s(l,[["render",t],["__file","02-搭建k8s集群.html.vue"]]),p=JSON.parse('{"path":"/knowledge/Java/JavaEE/k8s/02-%E6%90%AD%E5%BB%BAk8s%E9%9B%86%E7%BE%A4.html","title":"kubeadm搭建k8s集群","lang":"zh-CN","frontmatter":{"description":"kubeadm搭建k8s集群 环境搭建 3台服务器，建议每台服务器设置主机名 xxx-nodex 操作系统：CentOS 7 Docker：20+ k8s：1.23.6 最低配置：2核、2G内存、20G硬盘 安装步骤 初始操作 Kubernetes依赖于网络连接来实现不同组件之间的通信。防火墙可能会阻止这些连接，因此在配置集群时，通常会先禁用防火墙。 ...","head":[["meta",{"property":"og:url","content":"https://jishuzhaix.cn/my-docs/knowledge/Java/JavaEE/k8s/02-%E6%90%AD%E5%BB%BAk8s%E9%9B%86%E7%BE%A4.html"}],["meta",{"property":"og:site_name","content":"技数斋"}],["meta",{"property":"og:title","content":"kubeadm搭建k8s集群"}],["meta",{"property":"og:description","content":"kubeadm搭建k8s集群 环境搭建 3台服务器，建议每台服务器设置主机名 xxx-nodex 操作系统：CentOS 7 Docker：20+ k8s：1.23.6 最低配置：2核、2G内存、20G硬盘 安装步骤 初始操作 Kubernetes依赖于网络连接来实现不同组件之间的通信。防火墙可能会阻止这些连接，因此在配置集群时，通常会先禁用防火墙。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-17T14:21:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-17T14:21:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"kubeadm搭建k8s集群\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-17T14:21:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"贺墨于\\",\\"url\\":\\"https://jishuzhaix.cn\\"}]}"]]},"headers":[{"level":2,"title":"环境搭建","slug":"环境搭建","link":"#环境搭建","children":[]},{"level":2,"title":"安装步骤","slug":"安装步骤","link":"#安装步骤","children":[{"level":3,"title":"初始操作","slug":"初始操作","link":"#初始操作","children":[]},{"level":3,"title":"安装k8s（所有节点）","slug":"安装k8s-所有节点","link":"#安装k8s-所有节点","children":[]},{"level":3,"title":"部署 k8s Master","slug":"部署-k8s-master","link":"#部署-k8s-master","children":[]},{"level":3,"title":"部署 k8s Node","slug":"部署-k8s-node","link":"#部署-k8s-node","children":[]},{"level":3,"title":"部署 CNI 网络插件","slug":"部署-cni-网络插件","link":"#部署-cni-网络插件","children":[]}]},{"level":2,"title":"测试集群","slug":"测试集群","link":"#测试集群","children":[]},{"level":2,"title":"命令行工具","slug":"命令行工具","link":"#命令行工具","children":[{"level":3,"title":"任意节点使用 kubectl","slug":"任意节点使用-kubectl","link":"#任意节点使用-kubectl","children":[]}]}],"git":{"createdTime":1739802080000,"updatedTime":1739802080000,"contributors":[{"name":"HeMOu","username":"HeMOu","email":"fangqichenchao@163.com","commits":1,"url":"https://github.com/HeMOu"}]},"readingTime":{"minutes":4.26,"words":1278},"filePathRelative":"knowledge/Java/JavaEE/k8s/02-搭建k8s集群.md","localizedDate":"2025年2月17日","excerpt":"\\n<h2>环境搭建</h2>\\n<ul>\\n<li>3台服务器，建议每台服务器设置主机名 xxx-nodex\\n<ul>\\n<li>操作系统：CentOS 7</li>\\n<li>Docker：20+</li>\\n<li>k8s：1.23.6</li>\\n</ul>\\n</li>\\n<li>最低配置：2核、2G内存、20G硬盘</li>\\n</ul>\\n<h2>安装步骤</h2>\\n<h3>初始操作</h3>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\"># 关闭防火墙</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">systemctl</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> stop</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> firewalld</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">systemctl</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> disable</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> firewalld</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{r as comp,p as data};
