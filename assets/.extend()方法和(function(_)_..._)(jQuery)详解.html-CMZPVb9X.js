import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as s,o as t}from"./app-C5-Gj3YP.js";const a={};function l(r,e){return t(),n("div",null,e[0]||(e[0]=[s(`<h1 id="extend-方法和-function-jquery-详解" tabindex="-1"><a class="header-anchor" href="#extend-方法和-function-jquery-详解"><span>$.extend()方法和(function($){...})(jQuery)详解</span></a></h1><h2 id="js中substring与substr的区别" tabindex="-1"><a class="header-anchor" href="#js中substring与substr的区别"><span>JS中substring与substr的区别</span></a></h2><h3 id="substring" tabindex="-1"><a class="header-anchor" href="#substring"><span>substring</span></a></h3><p>该方法可以有一个参数也可以有两个参数。</p><ul><li>一个参数：</li></ul><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">示例： var str=“Olive”；        </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      str.substring(3);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">结果：“ve”</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">说明：当substring只有一个参数时，参数表示从字符串的第几位开始截取，</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直截取到字符串结尾。</p><ul><li>两个参数：</li></ul><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" data-title="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">示例：var str=“Olive”；</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">1)str.substring(3,4);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">2)str.substring(3,2);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">结果：1) “v”  2) 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>当substring有两个参数时，第一个参数表示从字符串的第几位开始截取，<strong>第二个参数表示截取到字符串的第几位</strong>。</p></blockquote><h3 id="substr" tabindex="-1"><a class="header-anchor" href="#substr"><span>substr</span></a></h3><p>该方法也可以有一个或两个参数。</p><ul><li><p>一个参数：</p><p>说明：substr一个参数时，作用跟substring方法一个参数时一样。</p></li><li><p>两个参数：</p><p>示例：var str=“Olive”；</p><ol><li><p>str.substr(3,2);</p></li><li><p>str.substr(3,4);</p></li></ol><p>结果：1) “ve” 2) “ve”</p></li></ul><blockquote><p>substr有两个参数时，第一个参数表示从字符串的第几位开始截取，<strong>第二个参数表示截取多少位字符串</strong>。</p></blockquote><h2 id="extend" tabindex="-1"><a class="header-anchor" href="#extend"><span>$.extend()</span></a></h2><p>因为项目中有些地方看到有用到这个方法，当时也不知道是什么意思，见的多了就想了</p><p>解一下。原来这个方法还是挺有用的，多用在编写插件，当然，它本身也有一些重载原型。</p><h3 id="extend-result-item1-item2" tabindex="-1"><a class="header-anchor" href="#extend-result-item1-item2"><span>extend(result,item1,item2…..)</span></a></h3><p>这里这个方法主要用来合并，将所有的参数项都合并result中，并返回result，但是这</p><p>样就会破坏result的结构。</p><h3 id="extend-item1-item2" tabindex="-1"><a class="header-anchor" href="#extend-item1-item2"><span>extend({},item1,item2,……)</span></a></h3><p>用这个方法，可以将所得的结果全部合并在{}中，并返回，而且还不会破坏原有的项的结构。</p><p>示例：</p><p>Var item={name:”olive”,age:23};</p><p>Var item1={name:”Momo”,sex:”gril”};</p><p>Var result=$.extend({},item,item1);</p><p>结果：</p><p>Result={name:”Momo”,age:23,sex:”gril”};</p><p>说明：</p><p>以上的结果表明extend方法将所有的项都合并到了{}中，但是，细心一点就会发现，其中item1中的name：“Momo” 将item中的name：“olive”给覆盖了，这是怎么回事？请接着往下看。</p><h3 id="extend-bool-item1-item2" tabindex="-1"><a class="header-anchor" href="#extend-bool-item1-item2"><span>extend(bool,{},item1,item2….)</span></a></h3><p>Extend方法还有带bool型参数的重载。</p><p>bool型参数为true表示深拷贝，为false时表示浅拷贝。具体可以通过一下示例来说明：</p><p>示例：</p><p>var item={name：“olive”,age:23,address{provice:”河南”,city:”郑州”}};</p><p>var item1={sex:”girl”,address{city:”北京”}};</p><p>var result=$.extend(true,item,item1);</p><p>var result1=$.extend(false,item,item1);</p><p>结果：</p><p>Result={name：“olive”,age:23,sex:”gril”,address:{provice:”河南”,city:”北京”}};</p><p>Result1={name：“olive”,age:23,sex:”gril”,address:{ city:”北京”}};</p><p>说明：</p><p>以上结果说明，当参数为ture时，即为深拷贝，当子项item1中的子项有与item中的子项相同属性的值不一样时，item1中子项的值会将item子项中的值给覆盖，当子项item1的属性跟item中的属性不同时，会与item进行合并。</p><p>当参数为false时，子项item1中的子项中与item中的子项属性相同时，item1中子项的属性值会将item中的值给完全覆盖。</p><h3 id="extend-item" tabindex="-1"><a class="header-anchor" href="#extend-item"><span>$.extend(item)</span></a></h3><p>该方法是将item合并到Jquery的全局对象中去，相当于为Jquery全局对象添加了一个</p><p>静态方法（对应这里的静态方法，当然还有实例方法，在后边有介绍）。</p><pre><code> 示例：

       $.extend({SayHello:function(value){alert(“hello “+value);}});

       这样写过之后，就可以直接调用SayHello方法：

       $.SayHello(“Olive”);

 说明：该方法相当于为Jquery类添加了新的方法。
</code></pre><h3 id="fn-extend-item" tabindex="-1"><a class="header-anchor" href="#fn-extend-item"><span>$.fn.extend(item)</span></a></h3><p>上边提到的​$.extend(item)说是为Jquery类添加了静态方法，那么这里的$.fn.extend(item</p><p>)就是为每一个实例添加一个实例方法了。</p><pre><code> 示例：

     $.fn.extend({hello:function(value){alert(“hello “+value);}});

     这样写过之后，在获取每一个示例之后，都可以调用该方法：

     $(“#id”).hello(“Olive”);
</code></pre><h3 id="function-jquery" tabindex="-1"><a class="header-anchor" href="#function-jquery"><span>function($){….}）（jQuery）</span></a></h3><p>初次看到这种写法时，一头雾水，不知所云。在网上查找了一些资料之后才有点明白。</p><p>我们先看第一个括号里边的内容：function($){….}，这不就是一个匿名的函数吗？但是它的形参比较奇怪，是$,这里主要是为了不与其它的库冲突。</p><p>这样我们就比较容易理解第一个括号内的内容就是定义了一个匿名函数，我们在调用函数的时候，都是函数名后边加上括号以及实参，但是由于操作符的优先级我们定义的匿名函数也需要用（）括起来。</p><p>现在我想大家已经很清楚这句话是什么意思了吧。第一个括号表示定义了一个匿名函数，然后第二个函数表示为该函数传递的参数，整个结合起来意思就是，定义了一个匿名函数，然后又调用该函数，该函数的实参为jQuery。</p><p>相当于：function fun($){…};fun(jQuery);</p><p>这种方法多用于存放开发的插件，执行其中的代码时，Dom对象并不一定加载完毕。于此相反的是$(function(){})，这种方法在使用时页面的Dom对象已经加载完毕了。事实上该方法的全写是：$(document).ready(function(){});</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p><a href="https://blog.csdn.net/xuemoyao/article/details/19021659" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/xuemoyao/article/details/19021659</a></p>`,61)]))}const u=i(a,[["render",l],["__file",".extend()方法和(function(_)_..._)(jQuery)详解.html.vue"]]),o=JSON.parse('{"path":"/knowledge/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/.extend()%E6%96%B9%E6%B3%95%E5%92%8C(function(_)_..._)(jQuery)%E8%AF%A6%E8%A7%A3.html","title":"$.extend()方法和(function($){...})(jQuery)详解","lang":"zh-CN","frontmatter":{"description":"$.extend()方法和(function($){...})(jQuery)详解 JS中substring与substr的区别 substring 该方法可以有一个参数也可以有两个参数。 一个参数： 直截取到字符串结尾。 两个参数： 当substring有两个参数时，第一个参数表示从字符串的第几位开始截取，第二个参数表示截取到字符串的第几位。 sub...","head":[["meta",{"property":"og:url","content":"https://jishuzhaix.cn/knowledge/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/.extend()%E6%96%B9%E6%B3%95%E5%92%8C(function(_)_..._)(jQuery)%E8%AF%A6%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"技数斋"}],["meta",{"property":"og:title","content":"$.extend()方法和(function($){...})(jQuery)详解"}],["meta",{"property":"og:description","content":"$.extend()方法和(function($){...})(jQuery)详解 JS中substring与substr的区别 substring 该方法可以有一个参数也可以有两个参数。 一个参数： 直截取到字符串结尾。 两个参数： 当substring有两个参数时，第一个参数表示从字符串的第几位开始截取，第二个参数表示截取到字符串的第几位。 sub..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-17T14:21:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-17T14:21:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"$.extend()方法和(function($){...})(jQuery)详解\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-17T14:21:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"贺墨于\\",\\"url\\":\\"https://jishuzhaix.cn\\"}]}"]]},"headers":[{"level":2,"title":"JS中substring与substr的区别","slug":"js中substring与substr的区别","link":"#js中substring与substr的区别","children":[{"level":3,"title":"substring","slug":"substring","link":"#substring","children":[]},{"level":3,"title":"substr","slug":"substr","link":"#substr","children":[]}]},{"level":2,"title":"$.extend()","slug":"extend","link":"#extend","children":[{"level":3,"title":"extend(result,item1,item2…..)","slug":"extend-result-item1-item2","link":"#extend-result-item1-item2","children":[]},{"level":3,"title":"extend({},item1,item2,……)","slug":"extend-item1-item2","link":"#extend-item1-item2","children":[]},{"level":3,"title":"extend(bool,{},item1,item2….)","slug":"extend-bool-item1-item2","link":"#extend-bool-item1-item2","children":[]},{"level":3,"title":"$.extend(item)","slug":"extend-item","link":"#extend-item","children":[]},{"level":3,"title":"$.fn.extend(item)","slug":"fn-extend-item","link":"#fn-extend-item","children":[]},{"level":3,"title":"function($){….}）（jQuery）","slug":"function-jquery","link":"#function-jquery","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1739802080000,"updatedTime":1739802080000,"contributors":[{"name":"HeMOu","username":"HeMOu","email":"fangqichenchao@163.com","commits":1,"url":"https://github.com/HeMOu"}]},"readingTime":{"minutes":4.27,"words":1280},"filePathRelative":"knowledge/前端/前端基础/$.extend()方法和(function($){...})(jQuery)详解.md","localizedDate":"2025年2月17日","excerpt":"\\n<h2>JS中substring与substr的区别</h2>\\n<h3>substring</h3>\\n<p>该方法可以有一个参数也可以有两个参数。</p>\\n<ul>\\n<li>一个参数：</li>\\n</ul>\\n<div class=\\"language-markdown line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"markdown\\" data-title=\\"markdown\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">示例： var str=“Olive”；        </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">      str.substring(3);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">结果：“ve”</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">说明：当substring只有一个参数时，参数表示从字符串的第几位开始截取，</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{u as comp,o as data};
