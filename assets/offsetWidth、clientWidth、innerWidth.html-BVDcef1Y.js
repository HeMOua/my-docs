import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as l,o as n}from"./app-Dxo9_7Ek.js";const d={};function o(h,i){return n(),e("div",null,i[0]||(i[0]=[l('<h1 id="offsetwidth、clientwidth、innerwidth" tabindex="-1"><a class="header-anchor" href="#offsetwidth、clientwidth、innerwidth"><span>offsetWidth、clientWidth、innerWidth</span></a></h1><ul><li>元素视图属性 <ul><li>offsetWidth 水平方向 width + 左右padding + 左右border-width</li><li>offsetHeight 垂直方向 height + 上下padding + 上下border-width</li><li>clientWidth 水平方向 width + 左右padding</li><li>clientHeight 垂直方向 height + 上下padding</li><li>offsetTop 获取当前元素到 定位父节点 的top方向的距离</li><li>offsetLeft 获取当前元素到 定位父节点 的left方向的距离</li><li>scrollWidth 元素内容真实的宽度，内容不超出盒子高度时为盒子的clientWidth</li><li>scrollHeight 元素内容真实的高度，内容不超出盒子高度时为盒子的clientHeight</li></ul></li><li>Window视图属性（低版本IE浏览器[&lt;IE9]不支持） 【自测包含滚动条，但网络教程都说不包含？？？】 <ul><li>innerWidth 浏览器窗口可视区宽度（不包括浏览器控制台、菜单栏、工具栏）</li><li>innerHeight 浏览器窗口可视区高度（不包括浏览器控制台、菜单栏、工具栏）</li></ul></li><li>Document文档视图（低版本IE的innerWidth、innerHeight的代替方案） <ul><li>document.documentElement.clientWidth 浏览器窗口可视区宽度（不包括浏览器控制台、菜单栏、工具栏、滚动条）</li><li>document.documentElement.clientHeight 浏览器窗口可视区高度（不包括浏览器控制台、菜单栏、工具栏、滚动条）</li><li>document.documentElement.offsetHeight 获取整个文档的高度（包含body的margin）</li><li>document.body.offsetHeight 获取整个文档的高度（不包含body的margin）</li><li>document.documentElement.scrollTop 返回文档的滚动top方向的距离（当窗口发生滚动时值改变）</li><li>document.documentElement.scrollLeft 返回文档的滚动left方向的距离（当窗口发生滚动时值改变）</li></ul></li><li>元素方法 <ul><li>getBoundingClientRect() 获取元素到body <ul><li>bottom: 元素底边（包括border）到可视区最顶部的距离</li><li>left: 元素最左边（不包括border）到可视区最左边的距离</li><li>right: 元素最右边（包括border）到可视区最左边的距离</li><li>top: 元素顶边（不包括border）到可视区最顶部的距离</li><li>height: 元素的offsetHeight</li><li>width: 元素的offsetWidth</li><li>x: 元素左上角的x坐标</li><li>y: 元素左上角的y坐标</li></ul></li><li>scrollIntoView() 让元素滚动到可视区</li></ul></li></ul>',2)]))}const f=t(d,[["render",o],["__file","offsetWidth、clientWidth、innerWidth.html.vue"]]),a=JSON.parse('{"path":"/knowledge/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/offsetWidth%E3%80%81clientWidth%E3%80%81innerWidth.html","title":"offsetWidth、clientWidth、innerWidth","lang":"zh-CN","frontmatter":{"description":"offsetWidth、clientWidth、innerWidth 元素视图属性 offsetWidth 水平方向 width + 左右padding + 左右border-width offsetHeight 垂直方向 height + 上下padding + 上下border-width clientWidth 水平方向 width + 左右pa...","head":[["meta",{"property":"og:url","content":"https://jishuzhaix.cn/knowledge/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/offsetWidth%E3%80%81clientWidth%E3%80%81innerWidth.html"}],["meta",{"property":"og:site_name","content":"技数斋"}],["meta",{"property":"og:title","content":"offsetWidth、clientWidth、innerWidth"}],["meta",{"property":"og:description","content":"offsetWidth、clientWidth、innerWidth 元素视图属性 offsetWidth 水平方向 width + 左右padding + 左右border-width offsetHeight 垂直方向 height + 上下padding + 上下border-width clientWidth 水平方向 width + 左右pa..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-17T14:21:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-17T14:21:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"offsetWidth、clientWidth、innerWidth\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-17T14:21:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"贺墨于\\",\\"url\\":\\"https://jishuzhaix.cn\\"}]}"]]},"headers":[],"git":{"createdTime":1739802080000,"updatedTime":1739802080000,"contributors":[{"name":"HeMOu","username":"HeMOu","email":"fangqichenchao@163.com","commits":1,"url":"https://github.com/HeMOu"}]},"readingTime":{"minutes":1.7,"words":511},"filePathRelative":"knowledge/前端/前端基础/offsetWidth、clientWidth、innerWidth.md","localizedDate":"2025年2月17日","excerpt":"\\n<ul>\\n<li>元素视图属性\\n<ul>\\n<li>offsetWidth 水平方向 width + 左右padding + 左右border-width</li>\\n<li>offsetHeight 垂直方向 height + 上下padding + 上下border-width</li>\\n<li>clientWidth 水平方向 width + 左右padding</li>\\n<li>clientHeight 垂直方向 height + 上下padding</li>\\n<li>offsetTop 获取当前元素到 定位父节点 的top方向的距离</li>\\n<li>offsetLeft 获取当前元素到 定位父节点 的left方向的距离</li>\\n<li>scrollWidth 元素内容真实的宽度，内容不超出盒子高度时为盒子的clientWidth</li>\\n<li>scrollHeight 元素内容真实的高度，内容不超出盒子高度时为盒子的clientHeight</li>\\n</ul>\\n</li>\\n<li>Window视图属性（低版本IE浏览器[&lt;IE9]不支持） 【自测包含滚动条，但网络教程都说不包含？？？】\\n<ul>\\n<li>innerWidth 浏览器窗口可视区宽度（不包括浏览器控制台、菜单栏、工具栏）</li>\\n<li>innerHeight 浏览器窗口可视区高度（不包括浏览器控制台、菜单栏、工具栏）</li>\\n</ul>\\n</li>\\n<li>Document文档视图（低版本IE的innerWidth、innerHeight的代替方案）\\n<ul>\\n<li>document.documentElement.clientWidth 浏览器窗口可视区宽度（不包括浏览器控制台、菜单栏、工具栏、滚动条）</li>\\n<li>document.documentElement.clientHeight 浏览器窗口可视区高度（不包括浏览器控制台、菜单栏、工具栏、滚动条）</li>\\n<li>document.documentElement.offsetHeight 获取整个文档的高度（包含body的margin）</li>\\n<li>document.body.offsetHeight 获取整个文档的高度（不包含body的margin）</li>\\n<li>document.documentElement.scrollTop 返回文档的滚动top方向的距离（当窗口发生滚动时值改变）</li>\\n<li>document.documentElement.scrollLeft 返回文档的滚动left方向的距离（当窗口发生滚动时值改变）</li>\\n</ul>\\n</li>\\n<li>元素方法\\n<ul>\\n<li>getBoundingClientRect() 获取元素到body\\n<ul>\\n<li>bottom: 元素底边（包括border）到可视区最顶部的距离</li>\\n<li>left: 元素最左边（不包括border）到可视区最左边的距离</li>\\n<li>right: 元素最右边（包括border）到可视区最左边的距离</li>\\n<li>top: 元素顶边（不包括border）到可视区最顶部的距离</li>\\n<li>height: 元素的offsetHeight</li>\\n<li>width: 元素的offsetWidth</li>\\n<li>x: 元素左上角的x坐标</li>\\n<li>y: 元素左上角的y坐标</li>\\n</ul>\\n</li>\\n<li>scrollIntoView() 让元素滚动到可视区</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{f as comp,a as data};
