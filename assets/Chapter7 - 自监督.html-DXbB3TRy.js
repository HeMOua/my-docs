import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,o as t}from"./app-BQR2Y89h.js";const l="/assets/image-20211124202934774-9z7M2B4o.png",r="/assets/image-20211126102644575-BlylCSRL.png",s="/assets/image-20211126103434208-BIuwEeEU.png",o="/assets/image-20211126104520381-BuBB9bwi.png",p="/assets/image-20211126111029179-ste4CpBa.png",c="/assets/image-20211127152930988-DAf1YEFR.png",d={};function h(g,e){return t(),a("div",null,e[0]||(e[0]=[i('<h1 id="自监督学习" tabindex="-1"><a class="header-anchor" href="#自监督学习"><span>自监督学习</span></a></h1><ol><li>有大量没有标注的资料，用这些没有标注的资料可以训练一些模型</li><li>想一些不需要标注过的资料的任务进行模型的学习，比如 <ol><li>预测填空内容</li><li>预测下一个单词</li></ol></li><li>这个不需要标注资料的模型学习就称为自监督学习或者<code>Pre-Train</code></li><li>虽然训练出的这个能填空或者预测下一个单词的模型不一定有用，但是只要就行一点点的微调就能处理很多下游的任务</li></ol><h2 id="bert" tabindex="-1"><a class="header-anchor" href="#bert"><span>BERT</span></a></h2><h3 id="由来" tabindex="-1"><a class="header-anchor" href="#由来"><span>由来</span></a></h3><p>BERT芝麻街的一个角色名，有340M参数</p><figure><img src="'+l+'" alt="image-20211124202934774" tabindex="0" loading="lazy"><figcaption>image-20211124202934774</figcaption></figure><ul><li>ELMO：94M</li><li>BERT：340M</li><li>GPT-2：1542M</li><li>Megatron：8B</li></ul><p>常用来自然语言处理，输入一段seq，输出另一段seq</p><h3 id="masked-token-prediction" tabindex="-1"><a class="header-anchor" href="#masked-token-prediction"><span>Masked token Prediction</span></a></h3><p>1、将输入的sequence进行masking操作</p><ul><li>直接遮住（有一种代表遮住的特殊字符表示）</li><li>用一个随机字符替换</li></ul><p>2、通过Transformer Encoder后，会输出一段seq，找到对应被遮住的输出，然后将其变换为一个Linear，在对其softmax操作，会输出一个向量，对应可能对应值的概率分布</p><p>3、我们需要做的就是最小化真实值（被mask的值）与预测概率最大的差距</p><h3 id="next-sentence-prediction" tabindex="-1"><a class="header-anchor" href="#next-sentence-prediction"><span>Next Sentence Prediction</span></a></h3><figure><img src="'+r+'" alt="image-20211126102644575" tabindex="0" loading="lazy"><figcaption>image-20211126102644575</figcaption></figure><p>输入两个sentence（特殊字符SEP标注，将其分开），通过开始特殊字符（CLS）产生的Linear判断这两个句子是否相接</p><h3 id="downsteam-tasks" tabindex="-1"><a class="header-anchor" href="#downsteam-tasks"><span>Downsteam Tasks</span></a></h3><p>真正关心的东西，只需要一点标注的数据集</p><p>自监督学习 ---Pre-Train---&gt; Bert ----&gt; 通过Bert模型能进行一系列的子任务</p><p>预训练好的BERT可以看成一个微调fine-tune</p><h2 id="glue标准" tabindex="-1"><a class="header-anchor" href="#glue标准"><span>GLUE标准</span></a></h2><p>General Language Understanding Evaluation，一种评判标准，包含9种策略，可以来评判BERT的好坏</p><figure><img src="'+s+'" alt="image-20211126103434208" tabindex="0" loading="lazy"><figcaption>image-20211126103434208</figcaption></figure><p>有了BERT，机器在处理自然语言方面有更进了一步</p><h2 id="bert用例" tabindex="-1"><a class="header-anchor" href="#bert用例"><span>BERT用例</span></a></h2><h3 id="sentiment-analysis" tabindex="-1"><a class="header-anchor" href="#sentiment-analysis"><span>Sentiment analysis</span></a></h3><p>假如要做一个判断语句正面还是负面的模型</p><ul><li>输入由开始字符（CLS）和输入的句子构成</li><li>通过BERT这个模型</li><li>BERT产生一系列输入，但是只看CLS对应的输出</li><li>将这个输出转为Linear，然后再通过一个分类器，在这里就是判断正面还是负面的分类器</li></ul><figure><img src="'+o+'" alt="image-20211126104520381" tabindex="0" loading="lazy"><figcaption>image-20211126104520381</figcaption></figure><p>上面一整个步骤就是我们要学的模型，而我们需要随机初始化的参数只有Linear这个层，BERT这个模型的参数是通过之前填空（Masked Token Prediction）训练出来的，训练出的这个BERT会使整个模型变得更优</p><blockquote><p>在学习填空时，属于无监督学习。而完成下游任务需要少量的资料进行训练，属于监督学习。合起来就是~，也就是进行pre-train，然后再fine-tune</p></blockquote><h3 id="pos-tagging" tabindex="-1"><a class="header-anchor" href="#pos-tagging"><span>POS Tagging</span></a></h3><p>词性标注</p><p>（CLS）+ 输入的句子，输出一系列seq，只关注句子对应的输出，然后放进分类器进行判断</p><h3 id="nli" tabindex="-1"><a class="header-anchor" href="#nli"><span>NLI</span></a></h3><p>Natural Language Inference</p><p>可以判断两个句子是否逻辑相关，比如给一个上下文和一个评论信息，判断这个评论是正面还是负面（立场分析）</p><p>输入两个句子（SEP将其区分开），然后输出一系列结果，只关心CLS对应的结果，然后将其放到分类器进行分类</p><h3 id="基于提取的问题回答" tabindex="-1"><a class="header-anchor" href="#基于提取的问题回答"><span>基于提取的问题回答</span></a></h3><p>答案在输入的文章内容里面</p><figure><img src="'+p+'" alt="image-20211126111029179" tabindex="0" loading="lazy"><figcaption>image-20211126111029179</figcaption></figure><p>输入一个问题和一个上文，输出答案的开始索引和结束索引，比如答案在第17个单词处，那么输出就是（17，17）</p><h3 id="seq2seq" tabindex="-1"><a class="header-anchor" href="#seq2seq"><span>seq2seq</span></a></h3><p>将一个输入的文字进行各种打乱，掩盖、删除、弄乱、旋转，然后将其还原（论文MASS）</p><p>那种打乱方法好呢，论文T5 Transfer Text-to-Text Transformer有讲，在模型C4上训练的</p><h2 id="gpt" tabindex="-1"><a class="header-anchor" href="#gpt"><span>GPT</span></a></h2><p>主打<code>Predict Next Token</code>，架构比较像Transformer的Decoder，给一个开头，预测下一个单词，给出一个单词加上刚预测的单词，再预测一个单词，以此循环往复</p><p>GPT曾生成一个关于独角兽的假新闻，所以GPT的形象就是独角兽</p><p>可以用GPT将一句话补充完整</p><p>给出少量/一个/0个英语转法语的例子，要求输入一个法语能输出法语</p><h2 id="自监督其他例子" tabindex="-1"><a class="header-anchor" href="#自监督其他例子"><span>自监督其他例子</span></a></h2><figure><img src="'+c+'" alt="image-20211127152930988" tabindex="0" loading="lazy"><figcaption>image-20211127152930988</figcaption></figure><h2 id="auto-encoder" tabindex="-1"><a class="header-anchor" href="#auto-encoder"><span>Auto-Encoder</span></a></h2><p>比较古老的一个技术，也是不用标注过得资料就能进行模型的训练</p><p>比如有一对编码器Encoder和一个解码器Decoder</p><ol><li>可以输入一个图片到Encoder中，然后Encoder输出一个Vector</li><li>将这个Vector输入到Decoder，然后Decoder输出一个图片 <ol><li>这个Vector有时也称为Embedding，Representation，Code</li></ol></li><li>要做的就是让输入的图片和输出的图片尽量接近（重建）</li></ol><p>Auto-Encoder的一种应用就是，比如有个向量非常的大，那可以将他放到Encoder中，然后输出的Vector相对来说会小很多，然后通过重建，就能将这个输出的Vector代表之前输入的向量</p><p>有一种De-noising Auto-Encoder，对一张图片假如一些噪声，然后通过Auto-Encoder最初干净的图片</p><h3 id="feature-disentangle" tabindex="-1"><a class="header-anchor" href="#feature-disentangle"><span>Feature Disentangle</span></a></h3><p>功能区分</p><p>Auto-Encoder中间步骤的Vector向量可能提取的就是所输入数据的特征，比如输入图片，中间的Vector可能就包含图片的纹理特征，输入语音Vector可能就包含内容，音色等信息</p><p>但是有没有方法让Vector的一个区域专门表示某一个特定的特征呢</p><p>比如输入一段声音，中间向量Vector的前50代表说话的内容，后50位代表说话的音色，这样就可以将自己说出来的话转成别人的说话的样子，也就是声音转化<code>Voice Conversion</code></p><h3 id="discrete-representation" tabindex="-1"><a class="header-anchor" href="#discrete-representation"><span>Discrete Representation</span></a></h3><p>离散表示</p><p>中间向量的表示更加丰富，比如向量的第一个数字为1代表男性，为0代表女性，或者向量就是一个one-hot用来进行分类</p><p>Text as Representation</p><p>输入一段文字，然后输出少量文字，也就是摘要，然后通过这个生成的文字还原回原文章</p><p>Anomaly Detection 异常检测</p><p>通过一些正常的资料训练出来的模型来判断新输入的资料是否有异常</p><p>比如输入一张图片，一般情况下训练好的模型能对其进行重建，但是如果输入一个从未出现过的图片或者其他类型的图片，这时可能就不能完成重建，这样也就进行了异常检测</p>',71)]))}const E=n(d,[["render",h],["__file","Chapter7 - 自监督.html.vue"]]),f=JSON.parse('{"path":"/knowledge/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/Chapter7%20-%20%E8%87%AA%E7%9B%91%E7%9D%A3.html","title":"自监督学习","lang":"zh-CN","frontmatter":{"description":"自监督学习 有大量没有标注的资料，用这些没有标注的资料可以训练一些模型 想一些不需要标注过的资料的任务进行模型的学习，比如 预测填空内容 预测下一个单词 这个不需要标注资料的模型学习就称为自监督学习或者Pre-Train 虽然训练出的这个能填空或者预测下一个单词的模型不一定有用，但是只要就行一点点的微调就能处理很多下游的任务 BERT 由来 BERT芝...","head":[["meta",{"property":"og:url","content":"https://jishuzhaix.cn/knowledge/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/Chapter7%20-%20%E8%87%AA%E7%9B%91%E7%9D%A3.html"}],["meta",{"property":"og:site_name","content":"技数斋"}],["meta",{"property":"og:title","content":"自监督学习"}],["meta",{"property":"og:description","content":"自监督学习 有大量没有标注的资料，用这些没有标注的资料可以训练一些模型 想一些不需要标注过的资料的任务进行模型的学习，比如 预测填空内容 预测下一个单词 这个不需要标注资料的模型学习就称为自监督学习或者Pre-Train 虽然训练出的这个能填空或者预测下一个单词的模型不一定有用，但是只要就行一点点的微调就能处理很多下游的任务 BERT 由来 BERT芝..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-17T14:21:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-17T14:21:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自监督学习\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-17T14:21:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"贺墨于\\",\\"url\\":\\"https://jishuzhaix.cn\\"}]}"]]},"headers":[{"level":2,"title":"BERT","slug":"bert","link":"#bert","children":[{"level":3,"title":"由来","slug":"由来","link":"#由来","children":[]},{"level":3,"title":"Masked token Prediction","slug":"masked-token-prediction","link":"#masked-token-prediction","children":[]},{"level":3,"title":"Next Sentence Prediction","slug":"next-sentence-prediction","link":"#next-sentence-prediction","children":[]},{"level":3,"title":"Downsteam Tasks","slug":"downsteam-tasks","link":"#downsteam-tasks","children":[]}]},{"level":2,"title":"GLUE标准","slug":"glue标准","link":"#glue标准","children":[]},{"level":2,"title":"BERT用例","slug":"bert用例","link":"#bert用例","children":[{"level":3,"title":"Sentiment analysis","slug":"sentiment-analysis","link":"#sentiment-analysis","children":[]},{"level":3,"title":"POS Tagging","slug":"pos-tagging","link":"#pos-tagging","children":[]},{"level":3,"title":"NLI","slug":"nli","link":"#nli","children":[]},{"level":3,"title":"基于提取的问题回答","slug":"基于提取的问题回答","link":"#基于提取的问题回答","children":[]},{"level":3,"title":"seq2seq","slug":"seq2seq","link":"#seq2seq","children":[]}]},{"level":2,"title":"GPT","slug":"gpt","link":"#gpt","children":[]},{"level":2,"title":"自监督其他例子","slug":"自监督其他例子","link":"#自监督其他例子","children":[]},{"level":2,"title":"Auto-Encoder","slug":"auto-encoder","link":"#auto-encoder","children":[{"level":3,"title":"Feature Disentangle","slug":"feature-disentangle","link":"#feature-disentangle","children":[]},{"level":3,"title":"Discrete Representation","slug":"discrete-representation","link":"#discrete-representation","children":[]}]}],"git":{"createdTime":1739802080000,"updatedTime":1739802080000,"contributors":[{"name":"HeMOu","username":"HeMOu","email":"fangqichenchao@163.com","commits":1,"url":"https://github.com/HeMOu"}]},"readingTime":{"minutes":5.65,"words":1694},"filePathRelative":"knowledge/人工智能/李宏毅深度学习/Chapter7 - 自监督.md","localizedDate":"2025年2月17日","excerpt":"\\n<ol>\\n<li>有大量没有标注的资料，用这些没有标注的资料可以训练一些模型</li>\\n<li>想一些不需要标注过的资料的任务进行模型的学习，比如\\n<ol>\\n<li>预测填空内容</li>\\n<li>预测下一个单词</li>\\n</ol>\\n</li>\\n<li>这个不需要标注资料的模型学习就称为自监督学习或者<code>Pre-Train</code></li>\\n<li>虽然训练出的这个能填空或者预测下一个单词的模型不一定有用，但是只要就行一点点的微调就能处理很多下游的任务</li>\\n</ol>\\n<h2>BERT</h2>\\n<h3>由来</h3>\\n<p>BERT芝麻街的一个角色名，有340M参数</p>","autoDesc":true}');export{E as comp,f as data};
