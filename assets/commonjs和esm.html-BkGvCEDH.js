import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a,o as t}from"./app-DJ-_Fn1E.js";const n={};function l(o,s){return t(),e("div",null,s[0]||(s[0]=[a(`<h1 id="commonjs-和-esm-的区别" tabindex="-1"><a class="header-anchor" href="#commonjs-和-esm-的区别"><span>CommonJS 和 ESM 的区别</span></a></h1><h2 id="cjs-commonjs-模块" tabindex="-1"><a class="header-anchor" href="#cjs-commonjs-模块"><span><strong><code>cjs</code></strong> - CommonJS 模块</span></a></h2><ul><li><p><strong>CommonJS (CJS)</strong> 是一种在 Node.js 中广泛使用的模块系统。它使用 <code>require</code> 来导入模块，<code>module.exports</code> 或 <code>exports</code> 来导出模块。</p></li><li><p><strong>文件扩展名</strong>：<code>.cjs</code> 表示该文件使用 CommonJS 模块系统。</p></li><li><p>示例</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// math.cjs</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  add</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="mjs-es-module-模块" tabindex="-1"><a class="header-anchor" href="#mjs-es-module-模块"><span><strong><code>mjs</code></strong> - ES Module 模块</span></a></h2><ul><li><p><strong>ES Module (ESM)</strong> 是 JavaScript 的标准模块系统，使用 <code>import</code> 和 <code>export</code> 语法。它在浏览器和现代的 Node.js 中都有广泛的支持。</p></li><li><p><strong>文件扩展名</strong>：<code>.mjs</code> 表示该文件使用 ES Module 模块系统。</p></li><li><p>示例</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// math.mjs</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="为什么使用-cjs-和-mjs" tabindex="-1"><a class="header-anchor" href="#为什么使用-cjs-和-mjs"><span>为什么使用 <code>.cjs</code> 和 <code>.mjs</code>？</span></a></h2><p>在 Node.js 中，不同的模块系统（CommonJS 和 ES Module）在行为上有所不同。例如，<code>import</code> 和 <code>require</code> 在语法和执行顺序上有差异。因此，Node.js 使用这两种不同的扩展名来区分这两种模块类型，帮助开发者明确文件使用的模块系统。</p><h2 id="js-普通-js-脚本" tabindex="-1"><a class="header-anchor" href="#js-普通-js-脚本"><span><strong><code>.js</code></strong> - 普通 js 脚本</span></a></h2><ul><li><code>.js</code> 是普通的 JavaScript 文件扩展名，但在一些环境中，Node.js 会根据项目的 <code>package.json</code> 中的配置（如 <code>&quot;type&quot;: &quot;module&quot;</code>）来决定 <code>.js</code> 文件是否为 ESM 模块。 <ul><li>如果 <code>package.json</code> 中没有指定 <code>&quot;type&quot;</code>，Node.js 会默认将 <code>.js</code> 文件视为 CommonJS 模块。</li><li>如果 <code>package.json</code> 中设置了 <code>&quot;type&quot;: &quot;module&quot;</code>，则 <code>.js</code> 文件被视为 ES Module。</li></ul></li></ul>`,9)]))}const r=i(n,[["render",l],["__file","commonjs和esm.html.vue"]]),p=JSON.parse('{"path":"/knowledge/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/commonjs%E5%92%8Cesm.html","title":"CommonJS 和 ESM 的区别","lang":"zh-CN","frontmatter":{"description":"CommonJS 和 ESM 的区别 cjs - CommonJS 模块 CommonJS (CJS) 是一种在 Node.js 中广泛使用的模块系统。它使用 require 来导入模块，module.exports 或 exports 来导出模块。 文件扩展名：.cjs 表示该文件使用 CommonJS 模块系统。 示例 mjs - ES Modul...","head":[["meta",{"property":"og:url","content":"https://jishuzhaix.cn/knowledge/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%9F%BA%E7%A1%80/commonjs%E5%92%8Cesm.html"}],["meta",{"property":"og:site_name","content":"技数斋"}],["meta",{"property":"og:title","content":"CommonJS 和 ESM 的区别"}],["meta",{"property":"og:description","content":"CommonJS 和 ESM 的区别 cjs - CommonJS 模块 CommonJS (CJS) 是一种在 Node.js 中广泛使用的模块系统。它使用 require 来导入模块，module.exports 或 exports 来导出模块。 文件扩展名：.cjs 表示该文件使用 CommonJS 模块系统。 示例 mjs - ES Modul..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-17T14:21:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-17T14:21:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CommonJS 和 ESM 的区别\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-17T14:21:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"贺墨于\\",\\"url\\":\\"https://jishuzhaix.cn\\"}]}"]]},"headers":[{"level":2,"title":"cjs - CommonJS 模块","slug":"cjs-commonjs-模块","link":"#cjs-commonjs-模块","children":[]},{"level":2,"title":"mjs - ES Module 模块","slug":"mjs-es-module-模块","link":"#mjs-es-module-模块","children":[]},{"level":2,"title":"为什么使用 .cjs 和 .mjs？","slug":"为什么使用-cjs-和-mjs","link":"#为什么使用-cjs-和-mjs","children":[]},{"level":2,"title":".js - 普通 js 脚本","slug":"js-普通-js-脚本","link":"#js-普通-js-脚本","children":[]}],"git":{"createdTime":1739802080000,"updatedTime":1739802080000,"contributors":[{"name":"HeMOu","username":"HeMOu","email":"fangqichenchao@163.com","commits":1,"url":"https://github.com/HeMOu"}]},"readingTime":{"minutes":1.08,"words":325},"filePathRelative":"knowledge/前端/前端基础/commonjs和esm.md","localizedDate":"2025年2月17日","excerpt":"\\n<h2><strong><code>cjs</code></strong> - CommonJS 模块</h2>\\n<ul>\\n<li>\\n<p><strong>CommonJS (CJS)</strong> 是一种在 Node.js 中广泛使用的模块系统。它使用 <code>require</code> 来导入模块，<code>module.exports</code> 或 <code>exports</code> 来导出模块。</p>\\n</li>\\n<li>\\n<p><strong>文件扩展名</strong>：<code>.cjs</code> 表示该文件使用 CommonJS 模块系统。</p>\\n</li>\\n<li>\\n<p>示例</p>\\n<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// math.cjs</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\">module</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\">exports</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  add</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> (</span><span style=\\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\\">a</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\\">b</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">=&gt;</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> a</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> +</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> b</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">};</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>","autoDesc":true}');export{r as comp,p as data};
