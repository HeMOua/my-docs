import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as c,o as i}from"./app-Gj0sH8Bx.js";const d={};function n(l,e){return i(),t("div",null,e[0]||(e[0]=[c('<h1 id="配置-eslint" tabindex="-1"><a class="header-anchor" href="#配置-eslint"><span>配置 ESLint</span></a></h1><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2><p>ESLint 配置文件可以命名为以下任意名称：</p><ul><li>js 类：<code>eslint.config.(m|c)js</code></li><li>ts 类：<code>eslint.config.(m|c)ts</code></li></ul><p>其中 <code>m</code> 表示 ES Module，使用 import、export 导入导出，使用这种配置需要在 package.json 指定 <code>&quot;type&quot;: &quot;module&quot;</code>。</p><p><code>c</code> 则表示 CommonJS，使用 require、module.export 导入导出，默认则是这种情况</p><h2 id="配置对象" tabindex="-1"><a class="header-anchor" href="#配置对象"><span>配置对象</span></a></h2><p>每个配置对象都包含 ESLint 需要在一组文件上执行的所有信息。每个配置对象都由以下属性组成：</p><ul><li><code>name</code> - 配置对象的名称。这在错误消息和配置检查器中使用，以帮助识别正在使用哪个配置对象。</li><li><code>files</code> - 指示配置对象应应用于的文件的通配符模式数组。如果未指定，则配置对象适用于与任何其他配置对象匹配的所有文件。</li><li><code>ignores</code> - 指示配置对象不应应用于的文件的通配符模式数组。如果未指定，则配置对象适用于 <code>files</code> 匹配的所有文件。如果在配置对象中使用 <code>ignores</code> 而没有任何其他键，则模式将充当 <a href="https://eslint.nodejs.cn/docs/latest/use/configure/configuration-files#globally-ignoring-files-with-ignores" target="_blank" rel="noopener noreferrer">全局忽略</a>。</li><li><code>languageOptions</code> - 包含与如何为代码检查配置 JavaScript 相关的设置的对象。 <ul><li><code>ecmaVersion</code> - 支持的 ECMAScript 版本。可以是任何年份（即 <code>2022</code>）或版本（即 <code>5</code>）。对于最新支持的版本，设置为 <code>&quot;latest&quot;</code>。（默认：<code>&quot;latest&quot;</code>）</li><li><code>sourceType</code> - JavaScript 源代码的类型。可能的值是 <code>&quot;script&quot;</code> 用于传统脚本文件，<code>&quot;module&quot;</code> 用于 ECMAScript 模块 (ESM) 和 <code>&quot;commonjs&quot;</code> 用于 CommonJS 文件。（默认：<code>&quot;module&quot;</code> 用于 <code>.js</code> 和 <code>.mjs</code> 文件；<code>&quot;commonjs&quot;</code> 用于 <code>.cjs</code> 文件）</li><li><code>globals</code> - 指定在代码检查期间应添加到全局作用域的其他对象的对象。</li><li><code>parser</code> - 包含 <code>parse()</code> 方法或 <code>parseForESLint()</code> 方法的对象。（默认：<a href="https://github.com/eslint/js/tree/main/packages/espree" target="_blank" rel="noopener noreferrer"><code>espree</code></a>）</li><li><code>parserOptions</code> - 指定直接传递给解析器上的 <code>parse()</code> 或 <code>parseForESLint()</code> 方法的其他选项的对象。可用选项取决于解析器。</li></ul></li><li><code>linterOptions</code> - 包含与代码检查过程相关的设置的对象。 <ul><li><code>noInlineConfig</code> - 一个布尔值，指示是否允许内联配置。</li><li><code>reportUnusedDisableDirectives</code> - 一个严重性字符串，指示是否以及如何应跟踪和报告未使用的禁用和启用指令。对于旧版兼容性，<code>true</code> 相当于 <code>&quot;warn&quot;</code>，<code>false</code> 相当于 <code>&quot;off&quot;</code>。（默认值：<code>&quot;warn&quot;</code>）。</li></ul></li><li><code>processor</code> - 包含 <code>preprocess()</code> 和 <code>postprocess()</code> 方法的对象或指示插件内处理器名称的字符串（即 <code>&quot;pluginName/processorName&quot;</code>）。</li><li><code>plugins</code> - 包含插件名称到插件对象的名称-值映射的对象。指定 <code>files</code> 时，这些插件仅对匹配的文件可用。</li><li><code>rules</code> - 包含配置规则的对象。当指定 <code>files</code> 或 <code>ignores</code> 时，这些规则配置只对匹配的文件可用。</li><li><code>settings</code> - 一个包含名称-值对信息的对象，所有规则都应使用这些信息。</li></ul>',9)]))}const a=o(d,[["render",n],["__file","eslint9.html.vue"]]),p=JSON.parse('{"path":"/knowledge/%E5%89%8D%E7%AB%AF/ESLint/eslint9.html","title":"配置 ESLint","lang":"zh-CN","frontmatter":{"description":"配置 ESLint 配置文件 ESLint 配置文件可以命名为以下任意名称： js 类：eslint.config.(m|c)js ts 类：eslint.config.(m|c)ts 其中 m 表示 ES Module，使用 import、export 导入导出，使用这种配置需要在 package.json 指定 \\"type\\": \\"module\\"。 ...","head":[["meta",{"property":"og:url","content":"https://jishuzhaix.cn/knowledge/%E5%89%8D%E7%AB%AF/ESLint/eslint9.html"}],["meta",{"property":"og:site_name","content":"技数斋"}],["meta",{"property":"og:title","content":"配置 ESLint"}],["meta",{"property":"og:description","content":"配置 ESLint 配置文件 ESLint 配置文件可以命名为以下任意名称： js 类：eslint.config.(m|c)js ts 类：eslint.config.(m|c)ts 其中 m 表示 ES Module，使用 import、export 导入导出，使用这种配置需要在 package.json 指定 \\"type\\": \\"module\\"。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-17T14:21:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-17T14:21:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"配置 ESLint\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-17T14:21:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"贺墨于\\",\\"url\\":\\"https://jishuzhaix.cn\\"}]}"]]},"headers":[{"level":2,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]},{"level":2,"title":"配置对象","slug":"配置对象","link":"#配置对象","children":[]}],"git":{"createdTime":1739802080000,"updatedTime":1739802080000,"contributors":[{"name":"HeMOu","username":"HeMOu","email":"fangqichenchao@163.com","commits":1,"url":"https://github.com/HeMOu"}]},"readingTime":{"minutes":2.34,"words":703},"filePathRelative":"knowledge/前端/ESLint/eslint9.md","localizedDate":"2025年2月17日","excerpt":"\\n<h2>配置文件</h2>\\n<p>ESLint 配置文件可以命名为以下任意名称：</p>\\n<ul>\\n<li>js 类：<code>eslint.config.(m|c)js</code></li>\\n<li>ts 类：<code>eslint.config.(m|c)ts</code></li>\\n</ul>\\n<p>其中 <code>m</code> 表示 ES Module，使用 import、export 导入导出，使用这种配置需要在 package.json 指定 <code>\\"type\\": \\"module\\"</code>。</p>\\n<p><code>c</code> 则表示 CommonJS，使用 require、module.export 导入导出，默认则是这种情况</p>","autoDesc":true}');export{a as comp,p as data};
