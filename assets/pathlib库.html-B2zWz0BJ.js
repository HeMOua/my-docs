import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as e}from"./app-Gj0sH8Bx.js";const t={};function h(l,i){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="pathlib库" tabindex="-1"><a class="header-anchor" href="#pathlib库"><span>pathlib库</span></a></h1><blockquote><p>引入库<code>from pathlib import Path</code></p></blockquote><h2 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法"><span>基本用法</span></a></h2><p>在过去，文件的路径是纯字符串，现在它会是一个<code>pathlib.Path</code>对象</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>In : p = Path(&#39;/home/ubuntu&#39;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>In : p</span></span>
<span class="line"><span>Out: PosixPath(&#39;/home/ubuntu&#39;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>In : str(p)</span></span>
<span class="line"><span>Out: &#39;/home/ubuntu&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用str函数可以把一个Path对象转化成字符串。</p><blockquote><p><strong>在Python 3.6之前</strong>，Path对象是不能作为os模块下的参数的，需要手动转化成字符串:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">os.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">chdir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(p)      </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 错误</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">os.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">chdir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(p)) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 正确</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从Python 3.6开始，这些接受路径作为参数的函数内部会先通过<code>os.fspath</code>调用Path对象的<code>__fspath__</code>方法获得字符串类型的路径再去执行下面的逻辑。所以要注意: <strong>如果你想全面使用pathlib模块，应该使用Python3.6或者更高版本！</strong></p></blockquote><h2 id="拼接路径" tabindex="-1"><a class="header-anchor" href="#拼接路径"><span>拼接路径</span></a></h2><p>1、使用<code>joinpath</code></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">In : </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">joinpath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;home&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;dongwm/code&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Out: </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">PosixPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/home/dongwm/code&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>2、更方便的使用<code>/</code>进行拼接</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">In : </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;home&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;dongwm/code&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Out: </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">PosixPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/home/dongwm/code&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">In : </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;home&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;dongwm/code&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Out: </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">PosixPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/home/dongwm/code&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">In : </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;home&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;dongwm/code&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Out: </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">PosixPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/home/dongwm/code&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2><ul><li><code>Path(&#39;xx&#39;).name</code> ：文件名</li><li><code>Path(&#39;xx&#39;).stem</code> / <code>Path(&#39;xx&#39;).suffix</code> ：后缀</li></ul><h2 id="方法-★" tabindex="-1"><a class="header-anchor" href="#方法-★"><span>方法 ★</span></a></h2><ul><li><code>Path(&#39;xx&#39;).is_file()</code>：判断是否存在，并且是文件</li><li><code>Path(&#39;xx&#39;).is_dir()</code>：判断是否存在，并且是目录</li><li><code>Path(&#39;xx&#39;).rename(newpath)</code>：移动到指定路径，注意是路径，需要包括文件名</li><li><code>Path(x).resolve()</code>：获取文件的绝对路径</li><li><code>Path(x).unlink()</code>：获取文件的绝对路径</li><li><code>Path(x).with_suffix(&#39;.txt&#39;)</code>：修改文件到指定后缀，可以结合<code>rename</code>一起使用</li></ul><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p><a href="https://zhuanlan.zhihu.com/p/87940289" target="_blank" rel="noopener noreferrer">你应该使用pathlib替代os.path - 知乎 (zhihu.com)</a></p>`,18)]))}const k=s(t,[["render",h],["__file","pathlib库.html.vue"]]),r=JSON.parse(`{"path":"/knowledge/Python/%E6%8B%93%E5%B1%95%E5%BA%93/pathlib%E5%BA%93.html","title":"pathlib库","lang":"zh-CN","frontmatter":{"description":"pathlib库 引入库from pathlib import Path 基本用法 在过去，文件的路径是纯字符串，现在它会是一个pathlib.Path对象 使用str函数可以把一个Path对象转化成字符串。 在Python 3.6之前，Path对象是不能作为os模块下的参数的，需要手动转化成字符串: 从Python 3.6开始，这些接受路径作为参数的...","head":[["meta",{"property":"og:url","content":"https://jishuzhaix.cn/knowledge/Python/%E6%8B%93%E5%B1%95%E5%BA%93/pathlib%E5%BA%93.html"}],["meta",{"property":"og:site_name","content":"技数斋"}],["meta",{"property":"og:title","content":"pathlib库"}],["meta",{"property":"og:description","content":"pathlib库 引入库from pathlib import Path 基本用法 在过去，文件的路径是纯字符串，现在它会是一个pathlib.Path对象 使用str函数可以把一个Path对象转化成字符串。 在Python 3.6之前，Path对象是不能作为os模块下的参数的，需要手动转化成字符串: 从Python 3.6开始，这些接受路径作为参数的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-17T14:21:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-17T14:21:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"pathlib库\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-17T14:21:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"贺墨于\\",\\"url\\":\\"https://jishuzhaix.cn\\"}]}"]]},"headers":[{"level":2,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[]},{"level":2,"title":"拼接路径","slug":"拼接路径","link":"#拼接路径","children":[]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":2,"title":"方法 ★","slug":"方法-★","link":"#方法-★","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1739802080000,"updatedTime":1739802080000,"contributors":[{"name":"HeMOu","username":"HeMOu","email":"fangqichenchao@163.com","commits":1,"url":"https://github.com/HeMOu"}]},"readingTime":{"minutes":1.3,"words":389},"filePathRelative":"knowledge/Python/拓展库/pathlib库.md","localizedDate":"2025年2月17日","excerpt":"\\n<blockquote>\\n<p>引入库<code>from pathlib import Path</code></p>\\n</blockquote>\\n<h2>基本用法</h2>\\n<p>在过去，文件的路径是纯字符串，现在它会是一个<code>pathlib.Path</code>对象</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>In : p = Path('/home/ubuntu')</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>In : p</span></span>\\n<span class=\\"line\\"><span>Out: PosixPath('/home/ubuntu')</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>In : str(p)</span></span>\\n<span class=\\"line\\"><span>Out: '/home/ubuntu'</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{k as comp,r as data};
