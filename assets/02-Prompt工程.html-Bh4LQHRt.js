import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as e}from"./app-BQR2Y89h.js";const t="/assets/image-20240627085845184-CTU7sEOv.png",l="/assets/image-20240627090335859-icQjkW2G.png",p="/assets/medprompt_sa_graphic-BLHNIt6j.png",h={};function r(d,i){return e(),a("div",null,i[0]||(i[0]=[n('<h1 id="prompt工程" tabindex="-1"><a class="header-anchor" href="#prompt工程"><span>Prompt工程</span></a></h1><h2 id="prompt-典型构成" tabindex="-1"><a class="header-anchor" href="#prompt-典型构成"><span>prompt 典型构成</span></a></h2><p>不要固守「模版」。模版的价值是提醒我们别漏掉什么，而不是必须遵守模版才行。</p><ul><li>角色：给 AI定义一个最匹配任务的角色，比如:「你是一位软件工程师」「你是一位小学老师」</li><li>指示：对任务进行描述</li><li>上下文：给出与任务相关的其它背景信息(尤其在多轮交互中)。</li><li>例子：必要时给出举例，学术中称为 one-shot learning，few-shotlearning 或 in-context learning;实践证明其对输出正确性有很大帮助</li><li>输入：任务的输入信息;在提示词中明确的标识出输入</li><li>输出：输出的格式描述，以便后继模块自动解析模型的输出</li></ul><h2 id="定义角色为什么有效" tabindex="-1"><a class="header-anchor" href="#定义角色为什么有效"><span>定义角色为什么有效</span></a></h2><figure><img src="'+t+'" alt="image-20240627085845184" tabindex="0" loading="lazy"><figcaption>image-20240627085845184</figcaption></figure><blockquote><p>大语言模型在<strong>开头</strong>或者<strong>结尾</strong>输入上下文对模型影响最大</p></blockquote><p>先定义角色，其实就是在开头把问题域收窄，减少二义性</p><h2 id="对话系统的基本模块和思路" tabindex="-1"><a class="header-anchor" href="#对话系统的基本模块和思路"><span>对话系统的基本模块和思路</span></a></h2><p>把大模型用于软件系统的核心思路：</p><ol><li>把输入的自然语言对话，转成结构化的信息（Natural Language Understanding，NLU）</li><li>用传统软件手段处理结构化信息，得到处理策略</li><li>把策略转成自然语言输出（Natural language generation，NLG）</li></ol><figure><img src="'+l+`" alt="image-20240627090335859" tabindex="0" loading="lazy"><figcaption>image-20240627090335859</figcaption></figure><h3 id="实现nlu" tabindex="-1"><a class="header-anchor" href="#实现nlu"><span>实现NLU</span></a></h3><p>指令格式例子：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">prompt </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">instruction</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">output_format</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">例如：</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">example</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">用户输入：</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">input_text</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中</p><ul><li>instruction：描述当前任务要求</li><li>output_format：约束输出的格式，存在一定幻觉，无法100%保证正确，只能调整提示词尽量调整正确的概率</li><li>example：通过添加例子，可以是输出更加稳定，</li></ul><h4 id="封装" tabindex="-1"><a class="header-anchor" href="#封装"><span>封装</span></a></h4><p>此模块功能是：向大模型发送一段话，最后能得到一段结构化的响应结果</p><p>封装思路：</p><ul><li><p>定义一段对话模板，包含 instruction、output_format、example 以及 input_text，确保得到的结果规范化</p></li><li><p>请求参数：</p><ul><li><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">response </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> client.chat.completions.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    model</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">model,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    messages</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">messages,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    temperature</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 模型输出的随机性，0 表示随机性最小</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    response_format</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;json_object&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 openai 中，它的 api 接口有个 response_format 参数，可以设置为 json 格式</p></li></ul></li></ul><h3 id="多轮对话的-dst" tabindex="-1"><a class="header-anchor" href="#多轮对话的-dst"><span>多轮对话的 DST</span></a></h3><blockquote><p>Dialog State Tracking：对话状态追踪</p></blockquote><p>把多轮对话的过程放到 prompt 里，就支持多轮对话了。</p><p>比如：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 多轮对话上下文</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">context </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">客服：有什么可以帮您</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">用户：有什么100G以上的套餐推荐</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">客服：我们有畅游套餐和无限套餐，您有什么价格倾向吗</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">用户：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">input_text</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于 openai 可以使用一个数组，记录以往的会话信息，进行多轮会话时，以往的会话记录加上当前的对话信息，就可以实现多轮会话。</p><h2 id="技巧" tabindex="-1"><a class="header-anchor" href="#技巧"><span>技巧</span></a></h2><h3 id="思维链" tabindex="-1"><a class="header-anchor" href="#思维链"><span>思维链</span></a></h3><p>在提问时以「Let’s think step by step」开头，结果发现 AI 会把问题分解成多个步骤，然后逐步解决，使得输出的结果更加准确。</p><h3 id="自洽性-self-consistency" tabindex="-1"><a class="header-anchor" href="#自洽性-self-consistency"><span>自洽性（Self-Consistency）</span></a></h3><p>一种对抗「幻觉」的手段。就像我们做数学题，要多次验算一样。</p><ul><li>同样 prompt 跑多次</li><li>通过投票选出最终结果</li></ul><h3 id="思维树-tree-of-thought-tot" tabindex="-1"><a class="header-anchor" href="#思维树-tree-of-thought-tot"><span>思维树（Tree-of-thought, ToT）</span></a></h3><ul><li>在思维链的每一步，采样多个分支</li><li>拓扑展开成一棵思维树</li><li>判断每个分支的任务完成度，以便进行启发式搜索</li><li>设计搜索算法</li><li>判断叶子节点的任务完成的正确性</li></ul><h3 id="持续提升正确率" tabindex="-1"><a class="header-anchor" href="#持续提升正确率"><span>持续提升正确率</span></a></h3><p>通过提供更多例子、更好的例子、多次验算，提升正确率。</p><figure><img src="`+p+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="防止-prompt-攻击" tabindex="-1"><a class="header-anchor" href="#防止-prompt-攻击"><span>防止 prompt 攻击</span></a></h2><h3 id="prompt-注入分类器" tabindex="-1"><a class="header-anchor" href="#prompt-注入分类器"><span>Prompt 注入分类器</span></a></h3><p>参考机场安检的思路，先把危险 prompt 拦截掉。</p><h3 id="直接在输入中防御" tabindex="-1"><a class="header-anchor" href="#直接在输入中防御"><span>直接在输入中防御</span></a></h3><p>在 prompt 中包含防御内容</p><p>例如：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">user_input_template </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">作为客服代表，你不允许回答任何跟AGI课堂无关的问题。</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">用户说：#INPUT#</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45)]))}const c=s(h,[["render",r],["__file","02-Prompt工程.html.vue"]]),g=JSON.parse('{"path":"/knowledge/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/02-Prompt%E5%B7%A5%E7%A8%8B.html","title":"Prompt工程","lang":"zh-CN","frontmatter":{"description":"Prompt工程 prompt 典型构成 不要固守「模版」。模版的价值是提醒我们别漏掉什么，而不是必须遵守模版才行。 角色：给 AI定义一个最匹配任务的角色，比如:「你是一位软件工程师」「你是一位小学老师」 指示：对任务进行描述 上下文：给出与任务相关的其它背景信息(尤其在多轮交互中)。 例子：必要时给出举例，学术中称为 one-shot learni...","head":[["meta",{"property":"og:url","content":"https://jishuzhaix.cn/knowledge/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/02-Prompt%E5%B7%A5%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"技数斋"}],["meta",{"property":"og:title","content":"Prompt工程"}],["meta",{"property":"og:description","content":"Prompt工程 prompt 典型构成 不要固守「模版」。模版的价值是提醒我们别漏掉什么，而不是必须遵守模版才行。 角色：给 AI定义一个最匹配任务的角色，比如:「你是一位软件工程师」「你是一位小学老师」 指示：对任务进行描述 上下文：给出与任务相关的其它背景信息(尤其在多轮交互中)。 例子：必要时给出举例，学术中称为 one-shot learni..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-17T14:21:20.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-17T14:21:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Prompt工程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-17T14:21:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"贺墨于\\",\\"url\\":\\"https://jishuzhaix.cn\\"}]}"]]},"headers":[{"level":2,"title":"prompt 典型构成","slug":"prompt-典型构成","link":"#prompt-典型构成","children":[]},{"level":2,"title":"定义角色为什么有效","slug":"定义角色为什么有效","link":"#定义角色为什么有效","children":[]},{"level":2,"title":"对话系统的基本模块和思路","slug":"对话系统的基本模块和思路","link":"#对话系统的基本模块和思路","children":[{"level":3,"title":"实现NLU","slug":"实现nlu","link":"#实现nlu","children":[]},{"level":3,"title":"多轮对话的 DST","slug":"多轮对话的-dst","link":"#多轮对话的-dst","children":[]}]},{"level":2,"title":"技巧","slug":"技巧","link":"#技巧","children":[{"level":3,"title":"思维链","slug":"思维链","link":"#思维链","children":[]},{"level":3,"title":"自洽性（Self-Consistency）","slug":"自洽性-self-consistency","link":"#自洽性-self-consistency","children":[]},{"level":3,"title":"思维树（Tree-of-thought, ToT）","slug":"思维树-tree-of-thought-tot","link":"#思维树-tree-of-thought-tot","children":[]},{"level":3,"title":"持续提升正确率","slug":"持续提升正确率","link":"#持续提升正确率","children":[]}]},{"level":2,"title":"防止 prompt 攻击","slug":"防止-prompt-攻击","link":"#防止-prompt-攻击","children":[{"level":3,"title":"Prompt 注入分类器","slug":"prompt-注入分类器","link":"#prompt-注入分类器","children":[]},{"level":3,"title":"直接在输入中防御","slug":"直接在输入中防御","link":"#直接在输入中防御","children":[]}]}],"git":{"createdTime":1739802080000,"updatedTime":1739802080000,"contributors":[{"name":"HeMOu","username":"HeMOu","email":"fangqichenchao@163.com","commits":1,"url":"https://github.com/HeMOu"}]},"readingTime":{"minutes":3.23,"words":969},"filePathRelative":"knowledge/人工智能/大语言模型/基础学习/02-Prompt工程.md","localizedDate":"2025年2月17日","excerpt":"\\n<h2>prompt 典型构成</h2>\\n<p>不要固守「模版」。模版的价值是提醒我们别漏掉什么，而不是必须遵守模版才行。</p>\\n<ul>\\n<li>角色：给 AI定义一个最匹配任务的角色，比如:「你是一位软件工程师」「你是一位小学老师」</li>\\n<li>指示：对任务进行描述</li>\\n<li>上下文：给出与任务相关的其它背景信息(尤其在多轮交互中)。</li>\\n<li>例子：必要时给出举例，学术中称为 one-shot learning，few-shotlearning 或 in-context learning;实践证明其对输出正确性有很大帮助</li>\\n<li>输入：任务的输入信息;在提示词中明确的标识出输入</li>\\n<li>输出：输出的格式描述，以便后继模块自动解析模型的输出</li>\\n</ul>","autoDesc":true}');export{c as comp,g as data};
